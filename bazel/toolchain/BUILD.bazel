# For more information on configuring toolchains, see
# https://bazel.build/tutorials/ccp-toolchain-config
# and https://bazel.build/extending/toolchains.

load(":cfg.bzl", "cc_toolchain_config")

filegroup(name = "empty")

alias(
    name = "toolchain_type",
    actual = "@bazel_tools//tools/cpp:toolchain_type",
)

#
# arm64_gcc-linux-x86_64
#

# Toolchain identifier.
_arm64_gcc = "toolchain-arm64_gcc-linux-x86_64"

cc_toolchain_config(
    name = "arm64_gcc-linux-x86_64-config",
    ar = "/usr/bin/aarch64-linux-gnu-ar",
    cc = "/usr/bin/aarch64-linux-gnu-gcc",
    compiler = "aarch64-linux-gnu-gcc",
    ld = "/usr/bin/aarch64-linux-gnu-ld",
    sys_includes = [],
    target_cpu = "arm64",
    toolchain_identifier = _arm64_gcc,
)

cc_toolchain(
    name = "arm64_gcc-linux-x86_64",
    all_files = ":empty",
    compiler_files = ":empty",
    dwp_files = ":empty",
    linker_files = ":empty",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":arm64_gcc-linux-x86_64-config",
    toolchain_identifier = _arm64_gcc,
)

toolchain(
    name = "arm64_gcc-linux-x86_64-toolchain",
    exec_compatible_with = [
        "//:arm64_gcc",
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:arm64",
    ],
    toolchain = ":arm64_gcc-linux-x86_64",
    toolchain_type = ":toolchain_type",
)

#
# clang-linux-x86_64
#

# Toolchain identifier.
_x86_64_clang = "toolchain-clang-linux-x86_64"

cc_toolchain_config(
    name = "clang-linux-x86_64-config",
    ar = "/usr/bin/ar",
    cc = "/usr/bin/clang",
    compiler = "clang",
    ld = "/usr/bin/ld",
    sys_includes = [
        # TODO: remove hard-coded version number.
        "/usr/lib/clang/14.0.6",
        "/usr/include",
    ],
    target_cpu = "x86_64",
    toolchain_identifier = _x86_64_clang,
)

cc_toolchain(
    name = "clang-linux-x86_64",
    all_files = ":empty",
    compiler_files = ":empty",
    dwp_files = ":empty",
    linker_files = ":empty",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":clang-linux-x86_64-config",
    toolchain_identifier = _x86_64_clang,
)

toolchain(
    name = "clang-linux-x86_64-toolchain",
    exec_compatible_with = [
        "//:clang",
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    toolchain = ":clang-linux-x86_64",
    toolchain_type = ":toolchain_type",
)

#
# gcc-linux-x86_64
#

# Toolchain identifier.
_x86_64_gcc = "toolchain-gcc-linux-x86_64"

cc_toolchain_config(
    name = "gcc-linux-x86_64-config",
    ar = "/usr/bin/ar",
    cc = "/usr/bin/gcc",
    compiler = "gcc",
    ld = "/usr/bin/ld",
    sys_includes = [
        # TODO: remove hard-coded version number.
        "/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/include",
        "/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/include-fixed",
        "/usr/include",
    ],
    target_cpu = "x86_64",
    toolchain_identifier = _x86_64_gcc,
)

cc_toolchain(
    name = "gcc-linux-x86_64",
    all_files = ":empty",
    compiler_files = ":empty",
    dwp_files = ":empty",
    linker_files = ":empty",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":gcc-linux-x86_64-config",
    toolchain_identifier = _x86_64_gcc,
)

toolchain(
    name = "gcc-linux-x86_64-toolchain",
    exec_compatible_with = [
        "//:gcc",
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    toolchain = ":gcc-linux-x86_64",
    toolchain_type = ":toolchain_type",
)
